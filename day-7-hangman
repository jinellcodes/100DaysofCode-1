import random
import hangman_art
import hangman_words

# Update the word list to use the 'word_list' from hangman_words.py

word_list = hangman_words.word_list
chosen_word = random.choice(word_list)
# We can simplify the code to create a variable containing the length of the chosen word verses having to use len throughout the code
word_length = len(chosen_word)

end_of_game = False
lives = 6

# Import the logo from hangman_art.py and print it at the start of the game.
print(hangman_art.logo)

#Testing code
print(f'Pssst, the solution is {chosen_word}.')

#Create blanks
display = []
for _ in range(word_length):
  display += "_"

while not end_of_game:
  guess = input("Guess a letter: ").lower()

    # If the user has entered a letter they've already guessed, print the letter and let them know.
  if guess in display:
    print(f'{guess} has already been guessed.')
    
  #Check guessed letter
  # We need to use the range function here to find the position of each letter in the string
  for position in range(word_length):
    letter = chosen_word[position]
    #print(f"Current position: {position}\n Current letter: {letter}\n Guessed letter: {guess}")
    if letter == guess:
      display[position] = letter

  #Check if user is wrong.
  # This piece needs to be written outside of the for loop. It does a separate check through the word
  if guess not in chosen_word:
        # If the letter is not in the chosen_word, print out the letter and let them know it's not in the word.
    print(f'{guess} is not in the word. You lose a life.')  
    lives -= 1
    if lives == 0:
      end_of_game = True
      print("You lose.")

    #Join all the elements in the list and turn it into a String.
  print(f"{' '.join(display)}")

    #Check if user has got all letters.
    # Check if the while loop needs to continue; set the condition
  if "_" not in display:
    end_of_game = True
    print("You win.")

    #Import the stages from hangman_art.py 
    # The stages of ASCII (index) matches the number of lives
  print(hangman_art.stages[lives])
